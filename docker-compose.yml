version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: constellation-db
    environment:
      POSTGRES_DB: consolidator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: constellation-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/consolidator
      SECRET_KEY: your-secret-key-change-in-production-minimum-32-characters-long
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: gpt-4
      OPENAI_TEMPERATURE: 0.3
      OPENAI_MAX_TOKENS: 2000
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:8000"]'
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: constellation-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
